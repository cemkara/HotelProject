@model RestaurantViewModel
@{
    ViewData["Title"] = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-xl">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">New Restaurant</h5>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("New", "Restaurant", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="mb-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, new{@class="form-label"})
                            @Html.TextBoxFor(model => model.Name, new { placeholder = "Restaurant Name", @class = "form-control", })
                        </div>
                        @Html.ValidationMessageFor(x=>x.Name,"",new{@class="form-text", @style="color:red"})
                    </div>
                    <div class="mb-3">
                        <div class="form-group">
                            @Html.Label("Related User")
                            @Html.DropDownListFor(x=>x.SelectedUserId,(List<SelectListItem>)ViewBag.Users,"Select User",new {@class = "form-control"})
                        </div>
                        @Html.ValidationMessageFor(x=>x.SelectedUserId,"",new{@class="form-text", @style="color:red"})
                    </div>
                    <div class="mb-3">
                        <div class="form-group">
                            @Html.Label("Type")
                            @Html.DropDownListFor(x=>x.SelectedTypeId,(List<SelectListItem>)ViewBag.Types,"Select Type",new {@class = "form-control"})
                        </div>
                        @Html.ValidationMessageFor(x=>x.SelectedTypeId,"",new{@class="form-text", @style="color:red"})
                    </div>
                    <div class="mb-3">
                        @Html.Label("Email");
                        <div class="input-group input-group-merge">
                            @Html.TextBoxFor(model => model.Email, new { placeholder = "Email address", @class = "form-control", })
                        </div>
                        @Html.ValidationMessageFor(x=>x.Email,"",new{@class="form-text", @style="color:red"})

                    </div>
                    <div class="mb-3">
                        <div class="form-group">
                            @Html.Label("Phone");
                            @Html.TextBoxFor(model => model.Phone, new { placeholder = "Phone", @class = "form-control", })
                        </div>
                        @Html.ValidationMessageFor(x=>x.Phone,"",new{@class="form-text", @style="color:red"})

                    </div>
                    <div class="mb-3">
                        <div class="form-group">
                            @Html.Label("District")
                            @Html.DropDownListFor(x=>x.SelectedDistrictId,(List<SelectListItem>)ViewBag.Districts,"Select District",new {@class = "form-control"})
                        </div>
                        @Html.ValidationMessageFor(x=>x.SelectedDistrictId,"",new{@class="form-text", @style="color:red"})

                    </div>
                    <div class="mb-3">
                        <div class="form-group">

                            @Html.Label("Address");
                            @Html.TextBoxFor(model => model.AddressText, new { placeholder = "Address", @class = "form-control", })
                        </div>
                        @Html.ValidationMessageFor(x=>x.AddressText,"",new{@class="form-text", @style="color:red"})

                    </div>
                    <div class="mb-3">
                        <div class="form-group ">
                            @Html.Label("Status")
                            @Html.DropDownListFor(x=>x.SelectedStatusId,(List<SelectListItem>)ViewBag.Statuses,"Select Status",new {@class = "form-control"})
                        </div>
                        @Html.ValidationMessageFor(x=>x.SelectedStatusId,"",new{@class="form-text", @style="color:red"})
                    </div>
                    <div class="mb-3 row">
                        <label for="html5-number-input" class="col-md-2 col-form-label">Min Amount(₺)</label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.MinAmount, new { placeholder = "₺500", @class = "form-control", })
                        </div>
                        @Html.ValidationMessageFor(x=>x.MinAmount,"",new{@class="form-text", @style="color:red"})
                    </div>
                    <div class="mb-3 row">
                        <label for="html5-number-input" class="col-md-2 col-form-label">Max Delivery Time (minutes)</label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.MaxDeliveryTime, new { placeholder = "30", @class = "form-control", })
                        </div>
                        @Html.ValidationMessageFor(x=>x.MinAmount,"",new{@class="form-text", @style="color:red"})
                    </div>
                    <button type="submit" class="btn btn-primary">Save</button>
                }
            </div>
        </div>
    </div>
</div>

